/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as UserWithdrawImport } from './routes/user/withdraw'
import { Route as UserLoginImport } from './routes/user/login'
import { Route as UserHistoryImport } from './routes/user/history'
import { Route as UserDepositImport } from './routes/user/deposit'
import { Route as UserCurrentGamesImport } from './routes/user/currentGames'
import { Route as AdminLoginImport } from './routes/admin/login'
import { Route as UserTournamentsIndexImport } from './routes/user/tournaments/index'
import { Route as AdminTournamentsIndexImport } from './routes/admin/tournaments/index'
import { Route as UserTournamentsTournamentIdImport } from './routes/user/tournaments/$tournamentId'
import { Route as UserTournamentsGameNameImport } from './routes/user/tournaments/$gameName'
import { Route as AdminTournamentsNewImport } from './routes/admin/tournaments/new'
import { Route as AdminTournamentsHistoryImport } from './routes/admin/tournaments/history'
import { Route as AdminTournamentsFinishedTournamentsImport } from './routes/admin/tournaments/finishedTournaments'
import { Route as AdminTournamentsCurrentImport } from './routes/admin/tournaments/current'
import { Route as AdminTournamentsTournamentsIdImport } from './routes/admin/tournaments/$tournamentsId'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const UserWithdrawRoute = UserWithdrawImport.update({
  id: '/user/withdraw',
  path: '/user/withdraw',
  getParentRoute: () => rootRoute,
} as any)

const UserLoginRoute = UserLoginImport.update({
  id: '/user/login',
  path: '/user/login',
  getParentRoute: () => rootRoute,
} as any)

const UserHistoryRoute = UserHistoryImport.update({
  id: '/user/history',
  path: '/user/history',
  getParentRoute: () => rootRoute,
} as any)

const UserDepositRoute = UserDepositImport.update({
  id: '/user/deposit',
  path: '/user/deposit',
  getParentRoute: () => rootRoute,
} as any)

const UserCurrentGamesRoute = UserCurrentGamesImport.update({
  id: '/user/currentGames',
  path: '/user/currentGames',
  getParentRoute: () => rootRoute,
} as any)

const AdminLoginRoute = AdminLoginImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRoute,
} as any)

const UserTournamentsIndexRoute = UserTournamentsIndexImport.update({
  id: '/user/tournaments/',
  path: '/user/tournaments/',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsIndexRoute = AdminTournamentsIndexImport.update({
  id: '/admin/tournaments/',
  path: '/admin/tournaments/',
  getParentRoute: () => rootRoute,
} as any)

const UserTournamentsTournamentIdRoute =
  UserTournamentsTournamentIdImport.update({
    id: '/user/tournaments/$tournamentId',
    path: '/user/tournaments/$tournamentId',
    getParentRoute: () => rootRoute,
  } as any)

const UserTournamentsGameNameRoute = UserTournamentsGameNameImport.update({
  id: '/user/tournaments/$gameName',
  path: '/user/tournaments/$gameName',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsNewRoute = AdminTournamentsNewImport.update({
  id: '/admin/tournaments/new',
  path: '/admin/tournaments/new',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsHistoryRoute = AdminTournamentsHistoryImport.update({
  id: '/admin/tournaments/history',
  path: '/admin/tournaments/history',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsFinishedTournamentsRoute =
  AdminTournamentsFinishedTournamentsImport.update({
    id: '/admin/tournaments/finishedTournaments',
    path: '/admin/tournaments/finishedTournaments',
    getParentRoute: () => rootRoute,
  } as any)

const AdminTournamentsCurrentRoute = AdminTournamentsCurrentImport.update({
  id: '/admin/tournaments/current',
  path: '/admin/tournaments/current',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsTournamentsIdRoute =
  AdminTournamentsTournamentsIdImport.update({
    id: '/admin/tournaments/$tournamentsId',
    path: '/admin/tournaments/$tournamentsId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginImport
      parentRoute: typeof rootRoute
    }
    '/user/currentGames': {
      id: '/user/currentGames'
      path: '/user/currentGames'
      fullPath: '/user/currentGames'
      preLoaderRoute: typeof UserCurrentGamesImport
      parentRoute: typeof rootRoute
    }
    '/user/deposit': {
      id: '/user/deposit'
      path: '/user/deposit'
      fullPath: '/user/deposit'
      preLoaderRoute: typeof UserDepositImport
      parentRoute: typeof rootRoute
    }
    '/user/history': {
      id: '/user/history'
      path: '/user/history'
      fullPath: '/user/history'
      preLoaderRoute: typeof UserHistoryImport
      parentRoute: typeof rootRoute
    }
    '/user/login': {
      id: '/user/login'
      path: '/user/login'
      fullPath: '/user/login'
      preLoaderRoute: typeof UserLoginImport
      parentRoute: typeof rootRoute
    }
    '/user/withdraw': {
      id: '/user/withdraw'
      path: '/user/withdraw'
      fullPath: '/user/withdraw'
      preLoaderRoute: typeof UserWithdrawImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/$tournamentsId': {
      id: '/admin/tournaments/$tournamentsId'
      path: '/admin/tournaments/$tournamentsId'
      fullPath: '/admin/tournaments/$tournamentsId'
      preLoaderRoute: typeof AdminTournamentsTournamentsIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/current': {
      id: '/admin/tournaments/current'
      path: '/admin/tournaments/current'
      fullPath: '/admin/tournaments/current'
      preLoaderRoute: typeof AdminTournamentsCurrentImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/finishedTournaments': {
      id: '/admin/tournaments/finishedTournaments'
      path: '/admin/tournaments/finishedTournaments'
      fullPath: '/admin/tournaments/finishedTournaments'
      preLoaderRoute: typeof AdminTournamentsFinishedTournamentsImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/history': {
      id: '/admin/tournaments/history'
      path: '/admin/tournaments/history'
      fullPath: '/admin/tournaments/history'
      preLoaderRoute: typeof AdminTournamentsHistoryImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/new': {
      id: '/admin/tournaments/new'
      path: '/admin/tournaments/new'
      fullPath: '/admin/tournaments/new'
      preLoaderRoute: typeof AdminTournamentsNewImport
      parentRoute: typeof rootRoute
    }
    '/user/tournaments/$gameName': {
      id: '/user/tournaments/$gameName'
      path: '/user/tournaments/$gameName'
      fullPath: '/user/tournaments/$gameName'
      preLoaderRoute: typeof UserTournamentsGameNameImport
      parentRoute: typeof rootRoute
    }
    '/user/tournaments/$tournamentId': {
      id: '/user/tournaments/$tournamentId'
      path: '/user/tournaments/$tournamentId'
      fullPath: '/user/tournaments/$tournamentId'
      preLoaderRoute: typeof UserTournamentsTournamentIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/': {
      id: '/admin/tournaments/'
      path: '/admin/tournaments'
      fullPath: '/admin/tournaments'
      preLoaderRoute: typeof AdminTournamentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/tournaments/': {
      id: '/user/tournaments/'
      path: '/user/tournaments'
      fullPath: '/user/tournaments'
      preLoaderRoute: typeof UserTournamentsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin/login': typeof AdminLoginRoute
  '/user/currentGames': typeof UserCurrentGamesRoute
  '/user/deposit': typeof UserDepositRoute
  '/user/history': typeof UserHistoryRoute
  '/user/login': typeof UserLoginRoute
  '/user/withdraw': typeof UserWithdrawRoute
  '/admin': typeof AdminIndexRoute
  '/admin/tournaments/$tournamentsId': typeof AdminTournamentsTournamentsIdRoute
  '/admin/tournaments/current': typeof AdminTournamentsCurrentRoute
  '/admin/tournaments/finishedTournaments': typeof AdminTournamentsFinishedTournamentsRoute
  '/admin/tournaments/history': typeof AdminTournamentsHistoryRoute
  '/admin/tournaments/new': typeof AdminTournamentsNewRoute
  '/user/tournaments/$gameName': typeof UserTournamentsGameNameRoute
  '/user/tournaments/$tournamentId': typeof UserTournamentsTournamentIdRoute
  '/admin/tournaments': typeof AdminTournamentsIndexRoute
  '/user/tournaments': typeof UserTournamentsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin/login': typeof AdminLoginRoute
  '/user/currentGames': typeof UserCurrentGamesRoute
  '/user/deposit': typeof UserDepositRoute
  '/user/history': typeof UserHistoryRoute
  '/user/login': typeof UserLoginRoute
  '/user/withdraw': typeof UserWithdrawRoute
  '/admin': typeof AdminIndexRoute
  '/admin/tournaments/$tournamentsId': typeof AdminTournamentsTournamentsIdRoute
  '/admin/tournaments/current': typeof AdminTournamentsCurrentRoute
  '/admin/tournaments/finishedTournaments': typeof AdminTournamentsFinishedTournamentsRoute
  '/admin/tournaments/history': typeof AdminTournamentsHistoryRoute
  '/admin/tournaments/new': typeof AdminTournamentsNewRoute
  '/user/tournaments/$gameName': typeof UserTournamentsGameNameRoute
  '/user/tournaments/$tournamentId': typeof UserTournamentsTournamentIdRoute
  '/admin/tournaments': typeof AdminTournamentsIndexRoute
  '/user/tournaments': typeof UserTournamentsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin/login': typeof AdminLoginRoute
  '/user/currentGames': typeof UserCurrentGamesRoute
  '/user/deposit': typeof UserDepositRoute
  '/user/history': typeof UserHistoryRoute
  '/user/login': typeof UserLoginRoute
  '/user/withdraw': typeof UserWithdrawRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/tournaments/$tournamentsId': typeof AdminTournamentsTournamentsIdRoute
  '/admin/tournaments/current': typeof AdminTournamentsCurrentRoute
  '/admin/tournaments/finishedTournaments': typeof AdminTournamentsFinishedTournamentsRoute
  '/admin/tournaments/history': typeof AdminTournamentsHistoryRoute
  '/admin/tournaments/new': typeof AdminTournamentsNewRoute
  '/user/tournaments/$gameName': typeof UserTournamentsGameNameRoute
  '/user/tournaments/$tournamentId': typeof UserTournamentsTournamentIdRoute
  '/admin/tournaments/': typeof AdminTournamentsIndexRoute
  '/user/tournaments/': typeof UserTournamentsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/admin/login'
    | '/user/currentGames'
    | '/user/deposit'
    | '/user/history'
    | '/user/login'
    | '/user/withdraw'
    | '/admin'
    | '/admin/tournaments/$tournamentsId'
    | '/admin/tournaments/current'
    | '/admin/tournaments/finishedTournaments'
    | '/admin/tournaments/history'
    | '/admin/tournaments/new'
    | '/user/tournaments/$gameName'
    | '/user/tournaments/$tournamentId'
    | '/admin/tournaments'
    | '/user/tournaments'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/admin/login'
    | '/user/currentGames'
    | '/user/deposit'
    | '/user/history'
    | '/user/login'
    | '/user/withdraw'
    | '/admin'
    | '/admin/tournaments/$tournamentsId'
    | '/admin/tournaments/current'
    | '/admin/tournaments/finishedTournaments'
    | '/admin/tournaments/history'
    | '/admin/tournaments/new'
    | '/user/tournaments/$gameName'
    | '/user/tournaments/$tournamentId'
    | '/admin/tournaments'
    | '/user/tournaments'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/admin/login'
    | '/user/currentGames'
    | '/user/deposit'
    | '/user/history'
    | '/user/login'
    | '/user/withdraw'
    | '/admin/'
    | '/admin/tournaments/$tournamentsId'
    | '/admin/tournaments/current'
    | '/admin/tournaments/finishedTournaments'
    | '/admin/tournaments/history'
    | '/admin/tournaments/new'
    | '/user/tournaments/$gameName'
    | '/user/tournaments/$tournamentId'
    | '/admin/tournaments/'
    | '/user/tournaments/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AdminLoginRoute: typeof AdminLoginRoute
  UserCurrentGamesRoute: typeof UserCurrentGamesRoute
  UserDepositRoute: typeof UserDepositRoute
  UserHistoryRoute: typeof UserHistoryRoute
  UserLoginRoute: typeof UserLoginRoute
  UserWithdrawRoute: typeof UserWithdrawRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminTournamentsTournamentsIdRoute: typeof AdminTournamentsTournamentsIdRoute
  AdminTournamentsCurrentRoute: typeof AdminTournamentsCurrentRoute
  AdminTournamentsFinishedTournamentsRoute: typeof AdminTournamentsFinishedTournamentsRoute
  AdminTournamentsHistoryRoute: typeof AdminTournamentsHistoryRoute
  AdminTournamentsNewRoute: typeof AdminTournamentsNewRoute
  UserTournamentsGameNameRoute: typeof UserTournamentsGameNameRoute
  UserTournamentsTournamentIdRoute: typeof UserTournamentsTournamentIdRoute
  AdminTournamentsIndexRoute: typeof AdminTournamentsIndexRoute
  UserTournamentsIndexRoute: typeof UserTournamentsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AdminLoginRoute: AdminLoginRoute,
  UserCurrentGamesRoute: UserCurrentGamesRoute,
  UserDepositRoute: UserDepositRoute,
  UserHistoryRoute: UserHistoryRoute,
  UserLoginRoute: UserLoginRoute,
  UserWithdrawRoute: UserWithdrawRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminTournamentsTournamentsIdRoute: AdminTournamentsTournamentsIdRoute,
  AdminTournamentsCurrentRoute: AdminTournamentsCurrentRoute,
  AdminTournamentsFinishedTournamentsRoute:
    AdminTournamentsFinishedTournamentsRoute,
  AdminTournamentsHistoryRoute: AdminTournamentsHistoryRoute,
  AdminTournamentsNewRoute: AdminTournamentsNewRoute,
  UserTournamentsGameNameRoute: UserTournamentsGameNameRoute,
  UserTournamentsTournamentIdRoute: UserTournamentsTournamentIdRoute,
  AdminTournamentsIndexRoute: AdminTournamentsIndexRoute,
  UserTournamentsIndexRoute: UserTournamentsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/admin/login",
        "/user/currentGames",
        "/user/deposit",
        "/user/history",
        "/user/login",
        "/user/withdraw",
        "/admin/",
        "/admin/tournaments/$tournamentsId",
        "/admin/tournaments/current",
        "/admin/tournaments/finishedTournaments",
        "/admin/tournaments/history",
        "/admin/tournaments/new",
        "/user/tournaments/$gameName",
        "/user/tournaments/$tournamentId",
        "/admin/tournaments/",
        "/user/tournaments/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/admin/login": {
      "filePath": "admin/login.tsx"
    },
    "/user/currentGames": {
      "filePath": "user/currentGames.tsx"
    },
    "/user/deposit": {
      "filePath": "user/deposit.tsx"
    },
    "/user/history": {
      "filePath": "user/history.tsx"
    },
    "/user/login": {
      "filePath": "user/login.tsx"
    },
    "/user/withdraw": {
      "filePath": "user/withdraw.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/admin/tournaments/$tournamentsId": {
      "filePath": "admin/tournaments/$tournamentsId.tsx"
    },
    "/admin/tournaments/current": {
      "filePath": "admin/tournaments/current.tsx"
    },
    "/admin/tournaments/finishedTournaments": {
      "filePath": "admin/tournaments/finishedTournaments.tsx"
    },
    "/admin/tournaments/history": {
      "filePath": "admin/tournaments/history.tsx"
    },
    "/admin/tournaments/new": {
      "filePath": "admin/tournaments/new.tsx"
    },
    "/user/tournaments/$gameName": {
      "filePath": "user/tournaments/$gameName.tsx"
    },
    "/user/tournaments/$tournamentId": {
      "filePath": "user/tournaments/$tournamentId.tsx"
    },
    "/admin/tournaments/": {
      "filePath": "admin/tournaments/index.tsx"
    },
    "/user/tournaments/": {
      "filePath": "user/tournaments/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
