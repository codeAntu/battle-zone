/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WithdrawImport } from './routes/withdraw'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as HistoryImport } from './routes/history'
import { Route as DepositImport } from './routes/deposit'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as GamesIndexImport } from './routes/games/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as GamesJoinedGamesImport } from './routes/games/joinedGames'
import { Route as GamesGameNameIndexImport } from './routes/games/$gameName/index'
import { Route as AdminTournamentsIndexImport } from './routes/admin/tournaments/index'
import { Route as AdminGamesIndexImport } from './routes/admin/games/index'
import { Route as AdminGamesGameNameIndexImport } from './routes/admin/games/$gameName/index'
import { Route as AdminGamesGameNameNewImport } from './routes/admin/games/$gameName/new'
import { Route as AdminGamesGameNameGameIdImport } from './routes/admin/games/$gameName/$gameId'

// Create/Update Routes

const WithdrawRoute = WithdrawImport.update({
  id: '/withdraw',
  path: '/withdraw',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const DepositRoute = DepositImport.update({
  id: '/deposit',
  path: '/deposit',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GamesIndexRoute = GamesIndexImport.update({
  id: '/games/',
  path: '/games/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const GamesJoinedGamesRoute = GamesJoinedGamesImport.update({
  id: '/games/joinedGames',
  path: '/games/joinedGames',
  getParentRoute: () => rootRoute,
} as any)

const GamesGameNameIndexRoute = GamesGameNameIndexImport.update({
  id: '/games/$gameName/',
  path: '/games/$gameName/',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsIndexRoute = AdminTournamentsIndexImport.update({
  id: '/admin/tournaments/',
  path: '/admin/tournaments/',
  getParentRoute: () => rootRoute,
} as any)

const AdminGamesIndexRoute = AdminGamesIndexImport.update({
  id: '/admin/games/',
  path: '/admin/games/',
  getParentRoute: () => rootRoute,
} as any)

const AdminGamesGameNameIndexRoute = AdminGamesGameNameIndexImport.update({
  id: '/admin/games/$gameName/',
  path: '/admin/games/$gameName/',
  getParentRoute: () => rootRoute,
} as any)

const AdminGamesGameNameNewRoute = AdminGamesGameNameNewImport.update({
  id: '/admin/games/$gameName/new',
  path: '/admin/games/$gameName/new',
  getParentRoute: () => rootRoute,
} as any)

const AdminGamesGameNameGameIdRoute = AdminGamesGameNameGameIdImport.update({
  id: '/admin/games/$gameName/$gameId',
  path: '/admin/games/$gameName/$gameId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/deposit': {
      id: '/deposit'
      path: '/deposit'
      fullPath: '/deposit'
      preLoaderRoute: typeof DepositImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/withdraw': {
      id: '/withdraw'
      path: '/withdraw'
      fullPath: '/withdraw'
      preLoaderRoute: typeof WithdrawImport
      parentRoute: typeof rootRoute
    }
    '/games/joinedGames': {
      id: '/games/joinedGames'
      path: '/games/joinedGames'
      fullPath: '/games/joinedGames'
      preLoaderRoute: typeof GamesJoinedGamesImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/games/': {
      id: '/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/games/': {
      id: '/admin/games/'
      path: '/admin/games'
      fullPath: '/admin/games'
      preLoaderRoute: typeof AdminGamesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/': {
      id: '/admin/tournaments/'
      path: '/admin/tournaments'
      fullPath: '/admin/tournaments'
      preLoaderRoute: typeof AdminTournamentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/games/$gameName/': {
      id: '/games/$gameName/'
      path: '/games/$gameName'
      fullPath: '/games/$gameName'
      preLoaderRoute: typeof GamesGameNameIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/games/$gameName/$gameId': {
      id: '/admin/games/$gameName/$gameId'
      path: '/admin/games/$gameName/$gameId'
      fullPath: '/admin/games/$gameName/$gameId'
      preLoaderRoute: typeof AdminGamesGameNameGameIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/games/$gameName/new': {
      id: '/admin/games/$gameName/new'
      path: '/admin/games/$gameName/new'
      fullPath: '/admin/games/$gameName/new'
      preLoaderRoute: typeof AdminGamesGameNameNewImport
      parentRoute: typeof rootRoute
    }
    '/admin/games/$gameName/': {
      id: '/admin/games/$gameName/'
      path: '/admin/games/$gameName'
      fullPath: '/admin/games/$gameName'
      preLoaderRoute: typeof AdminGamesGameNameIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/deposit': typeof DepositRoute
  '/history': typeof HistoryRoute
  '/sign-up': typeof SignUpRoute
  '/withdraw': typeof WithdrawRoute
  '/games/joinedGames': typeof GamesJoinedGamesRoute
  '/admin': typeof AdminIndexRoute
  '/games': typeof GamesIndexRoute
  '/admin/games': typeof AdminGamesIndexRoute
  '/admin/tournaments': typeof AdminTournamentsIndexRoute
  '/games/$gameName': typeof GamesGameNameIndexRoute
  '/admin/games/$gameName/$gameId': typeof AdminGamesGameNameGameIdRoute
  '/admin/games/$gameName/new': typeof AdminGamesGameNameNewRoute
  '/admin/games/$gameName': typeof AdminGamesGameNameIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/deposit': typeof DepositRoute
  '/history': typeof HistoryRoute
  '/sign-up': typeof SignUpRoute
  '/withdraw': typeof WithdrawRoute
  '/games/joinedGames': typeof GamesJoinedGamesRoute
  '/admin': typeof AdminIndexRoute
  '/games': typeof GamesIndexRoute
  '/admin/games': typeof AdminGamesIndexRoute
  '/admin/tournaments': typeof AdminTournamentsIndexRoute
  '/games/$gameName': typeof GamesGameNameIndexRoute
  '/admin/games/$gameName/$gameId': typeof AdminGamesGameNameGameIdRoute
  '/admin/games/$gameName/new': typeof AdminGamesGameNameNewRoute
  '/admin/games/$gameName': typeof AdminGamesGameNameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/deposit': typeof DepositRoute
  '/history': typeof HistoryRoute
  '/sign-up': typeof SignUpRoute
  '/withdraw': typeof WithdrawRoute
  '/games/joinedGames': typeof GamesJoinedGamesRoute
  '/admin/': typeof AdminIndexRoute
  '/games/': typeof GamesIndexRoute
  '/admin/games/': typeof AdminGamesIndexRoute
  '/admin/tournaments/': typeof AdminTournamentsIndexRoute
  '/games/$gameName/': typeof GamesGameNameIndexRoute
  '/admin/games/$gameName/$gameId': typeof AdminGamesGameNameGameIdRoute
  '/admin/games/$gameName/new': typeof AdminGamesGameNameNewRoute
  '/admin/games/$gameName/': typeof AdminGamesGameNameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/deposit'
    | '/history'
    | '/sign-up'
    | '/withdraw'
    | '/games/joinedGames'
    | '/admin'
    | '/games'
    | '/admin/games'
    | '/admin/tournaments'
    | '/games/$gameName'
    | '/admin/games/$gameName/$gameId'
    | '/admin/games/$gameName/new'
    | '/admin/games/$gameName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/deposit'
    | '/history'
    | '/sign-up'
    | '/withdraw'
    | '/games/joinedGames'
    | '/admin'
    | '/games'
    | '/admin/games'
    | '/admin/tournaments'
    | '/games/$gameName'
    | '/admin/games/$gameName/$gameId'
    | '/admin/games/$gameName/new'
    | '/admin/games/$gameName'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/deposit'
    | '/history'
    | '/sign-up'
    | '/withdraw'
    | '/games/joinedGames'
    | '/admin/'
    | '/games/'
    | '/admin/games/'
    | '/admin/tournaments/'
    | '/games/$gameName/'
    | '/admin/games/$gameName/$gameId'
    | '/admin/games/$gameName/new'
    | '/admin/games/$gameName/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DepositRoute: typeof DepositRoute
  HistoryRoute: typeof HistoryRoute
  SignUpRoute: typeof SignUpRoute
  WithdrawRoute: typeof WithdrawRoute
  GamesJoinedGamesRoute: typeof GamesJoinedGamesRoute
  AdminIndexRoute: typeof AdminIndexRoute
  GamesIndexRoute: typeof GamesIndexRoute
  AdminGamesIndexRoute: typeof AdminGamesIndexRoute
  AdminTournamentsIndexRoute: typeof AdminTournamentsIndexRoute
  GamesGameNameIndexRoute: typeof GamesGameNameIndexRoute
  AdminGamesGameNameGameIdRoute: typeof AdminGamesGameNameGameIdRoute
  AdminGamesGameNameNewRoute: typeof AdminGamesGameNameNewRoute
  AdminGamesGameNameIndexRoute: typeof AdminGamesGameNameIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DepositRoute: DepositRoute,
  HistoryRoute: HistoryRoute,
  SignUpRoute: SignUpRoute,
  WithdrawRoute: WithdrawRoute,
  GamesJoinedGamesRoute: GamesJoinedGamesRoute,
  AdminIndexRoute: AdminIndexRoute,
  GamesIndexRoute: GamesIndexRoute,
  AdminGamesIndexRoute: AdminGamesIndexRoute,
  AdminTournamentsIndexRoute: AdminTournamentsIndexRoute,
  GamesGameNameIndexRoute: GamesGameNameIndexRoute,
  AdminGamesGameNameGameIdRoute: AdminGamesGameNameGameIdRoute,
  AdminGamesGameNameNewRoute: AdminGamesGameNameNewRoute,
  AdminGamesGameNameIndexRoute: AdminGamesGameNameIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/deposit",
        "/history",
        "/sign-up",
        "/withdraw",
        "/games/joinedGames",
        "/admin/",
        "/games/",
        "/admin/games/",
        "/admin/tournaments/",
        "/games/$gameName/",
        "/admin/games/$gameName/$gameId",
        "/admin/games/$gameName/new",
        "/admin/games/$gameName/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/deposit": {
      "filePath": "deposit.tsx"
    },
    "/history": {
      "filePath": "history.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/withdraw": {
      "filePath": "withdraw.tsx"
    },
    "/games/joinedGames": {
      "filePath": "games/joinedGames.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/games/": {
      "filePath": "games/index.tsx"
    },
    "/admin/games/": {
      "filePath": "admin/games/index.tsx"
    },
    "/admin/tournaments/": {
      "filePath": "admin/tournaments/index.tsx"
    },
    "/games/$gameName/": {
      "filePath": "games/$gameName/index.tsx"
    },
    "/admin/games/$gameName/$gameId": {
      "filePath": "admin/games/$gameName/$gameId.tsx"
    },
    "/admin/games/$gameName/new": {
      "filePath": "admin/games/$gameName/new.tsx"
    },
    "/admin/games/$gameName/": {
      "filePath": "admin/games/$gameName/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
